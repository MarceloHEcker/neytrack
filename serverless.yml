service: neytrack

provider:
  name: aws
  stage: sdx
  runtime: nodejs20.x
  region: us-east-1
  environment:
    DYNAMODB_TABLE: ${self:service}-games-${opt:stage, 'sdx'}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:DeleteItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
      Resource:
        - arn:aws:dynamodb:${self:provider.region}:*:table/${self:service}-games-${opt:stage, 'sdx'}

plugins:
  - serverless-offline

custom:
  serverless-offline:
    httpPort: 3000
    noPrependStageInUrl: true

build:
  esbuild:
    minify: true
    platform: node
    target: esnext
    sourcemap: true
    sourcesContent: false
    format: esm
    outExtension:
      .js: .mjs
    banner:
      js: import { createRequire } from 'module';const require = createRequire(import.meta.url);

functions:
  neytrack-list-games:
    name: neytrack-list-games-${opt:stage, 'sdx'}
    description: List all games that are in the database
    handler: src/controllers/list/index.handler
    events:
      - http:
          path: games
          method: get

  neytrack-get-game:
    name: neytrack-get-game-${opt:stage, 'sdx'}
    description: Get a game by its ID
    handler: src/controllers/get/index.handler
    events:
      - http:
          path: games/{id}
          method: get
          request:
            parameters:
              paths:
                id: true

  neytrack-delete-game:
    name: neytrack-delete-game-${opt:stage, 'sdx'}
    description: Delete a game by its ID
    handler: src/controllers/delete/index.handler
    events:
      - http:
          path: games/{id}
          method: delete
          request:
            parameters:
              paths:
                id: true

  neytrack-create-game:
    name: neytrack-create-game-${opt:stage, 'sdx'}
    description: Create a new game
    handler: src/controllers/create/index.handler
    events:
      - http:
          path: games
          method: post

  neytrack-update-game:
    name: neytrack-update-game-${opt:stage, 'sdx'}
    description: Update a game by its ID
    handler: src/controllers/update/index.handler
    events:
      - http:
          path: games/{id}
          method: put
          request:
            parameters:
              paths:
                id: true

resources:
  Resources:
    GamesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-games-${opt:stage, 'sdx'}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    ApiGatewayRestApi:
      Type: AWS::ApiGateway::RestApi
      Properties:
        Name: ${self:service}-api
        Description: API for ${self:service}
